<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Linq" #>
<#@ assembly name="System.IO" #>
<#@ assembly name="$(SolutionDir)\Tests\bin\Debug\netcoreapp3.1\EPPlus.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="OfficeOpenXml" #>
<#@ import namespace="System.Collections.Generic"#>
<#@ include file="ModelCreator.ttinclude"#>
<#@ include file="ExcelManager.ttinclude"#>
<# 
    var opath = Path.GetDirectoryName(Host.TemplateFile)+"\\Classes";
	if (!Directory.Exists(opath))
	{
	    Directory.CreateDirectory(opath);
	}

    var manager = new Manager(Host, GenerationEnvironment, true) { OutputPath = opath };

    var excelpath =Path.GetDirectoryName(Host.TemplateFile)+ "\\Excel\\ClassTemplate.xlsx";
    var creator = new ExcelManager();
    creator.Init(excelpath);

    foreach(var name in creator.ModelNames){
    var index = 0;
    manager.StartBlock(name+".cs");
    #>
//------------------------------------------------------------------------------
// CreateTime <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#>
//-----------------------------------------------------------------------------

using System.Collections.Generic;
using System.ComponentModel;
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
namespace Hal.Model
{   
   [Table("<#=name#>")]
   public partial class <#=name#>
    {
      <# foreach(var item in creator.GetModelTemplates(excelpath,name)){#>
       
        /// <summary>
        /// <#=item.Mean#>
        /// </summary>
        <# if(item.Key == "1"){#>
        [Key]
        <#}#>
        <# if(item.IsRequired == "1"){#>
        [Required]
        <#}#>
        <# if(item.Type.ToLower() == "string" && !string.IsNullOrWhiteSpace(item.Length)){#>
        [StringLength(<#=item.Length#>)]
        <#}#>
         <# if(!string.IsNullOrWhiteSpace(item.Remark)){#>
        [Description("<#=item.Remark#>")]
        <#}#>
        public <#=item.Type#> <#=item.EnglishName#> { get; set ; }

      <#}#> 
      }
}
<# manager.EndBlock(); #>

<#}

manager.Process(true);
#> 

