user  nginx;

worker_processes  10;
 

error_log  /var/log/nginx/error.log warn;

pid        /var/run/nginx.pid;
 

events {
	# max_client=worker_processes * worker_connections
    worker_connections  1024;
}
 
# http server
http {
  	#  include       /etc/nginx/mime.types;
	
    default_type  application/octet-stream;
	
    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                   '$status $body_bytes_sent "$http_referer" '
    #                   '"$http_user_agent" "$http_x_forwarded_for"';
 
    # access_log  /var/log/nginx/access.log  main;
 
	# zero-copy mode
     sendfile        on;
	
    #tcp_nopush     on;
 
	# client connect timeout
    keepalive_timeout  65;
	
	# gzip compression
    gzip  on;
 
    # include /etc/nginx/conf.d/*.conf;

	upstream mysvr { 
      server  host.docker.internal:5001;
      #server host.docker.internal:8080;
    }

	server {
   		 listen   80;
   		 # server_name   example.com *.example.com;

		location /signal {
      		 proxy_pass https://mysvr/signal;
     		 proxy_http_version 1.1;
       		 proxy_set_header   Upgrade $http_upgrade;
       		 proxy_set_header   Connection keep-alive;
       		 proxy_set_header   Host $host;
       		 proxy_cache_bypass $http_upgrade;
       		 proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
       		 proxy_set_header   X-Forwarded-Proto $scheme;
    	}

		location /httpreports {
      		 proxy_pass https://mysvr/httpreports;
     		 proxy_http_version 1.1;
       		 proxy_set_header   Upgrade $http_upgrade;
       		 proxy_set_header   Connection keep-alive;
       		 proxy_set_header   Host $host;
       		 proxy_cache_bypass $http_upgrade;
       		 proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
       		 proxy_set_header   X-Forwarded-Proto $scheme;
    	}
		location /hangfire {
      		 proxy_pass https://mysvr/hangfire;
     		 proxy_http_version 1.1;
       		 proxy_set_header   Upgrade $http_upgrade;
       		 proxy_set_header   Connection keep-alive;
       		 proxy_set_header   Host $host;
       		 proxy_cache_bypass $http_upgrade;
       		 proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
       		 proxy_set_header   X-Forwarded-Proto $scheme;
    	}

		location /profiler {
      		 proxy_pass https://mysvr/profiler;
     		 proxy_http_version 1.1;
       		 proxy_set_header   Upgrade $http_upgrade;
       		 proxy_set_header   Connection keep-alive;
       		 proxy_set_header   Host $host;
       		 proxy_cache_bypass $http_upgrade;
       		 proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
       		 proxy_set_header   X-Forwarded-Proto $scheme;
    	}

        location /myHub {
             proxy_pass   https://mysvr/myHub;
             proxy_http_version 1.1;
             proxy_read_timeout   3600s;
             # support websocket connection
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection "upgrade";
        }

		location / {
      		 proxy_pass https://mysvr;
     		 proxy_http_version 1.1;
       		 proxy_set_header   Upgrade $http_upgrade;
       		 proxy_set_header   Connection keep-alive;
       		 proxy_set_header   Host $host;
       		 proxy_cache_bypass $http_upgrade;
       		 proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
       		 proxy_set_header   X-Forwarded-Proto $scheme;
    	}
	}
}